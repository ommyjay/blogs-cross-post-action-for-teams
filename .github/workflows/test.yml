name: 'build-test'
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'
      - 'use-doppler-env'

jobs:
  build: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          yarn
      - run: |
          yarn all
  test: # make sure the action works on a clean machine without building
    runs-on: ubuntu-latest
    steps:
      - name: Set up doppler CLI
        uses: dopplerhq/cli-action@v1
      - name: Set author doppler token name
        run: |
          dopplerToKenName=$(echo "secrets.${GITHUB_ACTOR}_DOPPLER_TOKEN" | tr '[:lower:]' '[:upper:]')
          echo $dopplerToKenName
          echo "DOPPLER_TOKEN=$(echo "${{$dopplerToKenName}}")" >> $GITHUB_ENV
      - name: Set up env variables from doppler
        run: |
          doppler run -- printenv | grep DOPPLER
          echo "DEVTO_API_KEY=$(doppler secrets get DEVTO_API_KEY --plain)" >> $GITHUB_ENV
          echo "DEVTO_ORG_ID=$(doppler secrets get DEVTO_ORG_ID --plain)" >> $GITHUB_ENV
          echo "MEDIUM_API_KEY=$(doppler secrets get MEDIUM_API_KEY --plain)" >> $GITHUB_ENV
          echo "MEDIUM_BLOG_ID=$(doppler secrets get MEDIUM_BLOG_ID --plain)" >> $GITHUB_ENV
          echo "HASHNODE_API_KEY=$(doppler secrets get HASHNODE_API_KEY --plain)" >> $GITHUB_ENV
          echo "HASHNODE_BLOG_ID=$(doppler secrets get HASHNODE_BLOG_ID --plain)" >> $GITHUB_ENV
          echo $GITHUB_ACTOR''
        env:
          DOPPLER_TOKEN: ${{ env.DOPPLER_TOKEN }}
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Cross post articles
        uses: ./
        id: cross_post
        with:
          files_location: 'posts/**/*.md'
          dry_run: 'true'
          publish: 'false'
          devto_api_key: ${{ env.DEVTO_API_KEY }}
          medium_api_key: ${{ env.MEDIUM_API_KEY }}
          devto_org_id: ${{ env.DEVTO_ORG_ID }}
          medium_blog_id: ${{ env.MEDIUM_BLOG_ID}}
          hashnode_api_key: ${{ env.HASHNODE_API_KEY }}
          hashnode_blog_id: ${{ env.HASHNODE_BLOG_ID }}
      - name: Clean up changed files
        run: git rm `git ls-files --deleted` || exit 0;
      - name: Commit updated new files
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: '⚙️ AUTOMATED: Add posted articles files ${{ steps.cross_post.outputs.posted_articles }}'
          file_pattern: posts/**/*.md
          commit_user_name: ClickPesa-Bot
          commit_user_email: '103582747+ClickPesa-Bot@users.noreply.github.com'
